version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: dashboard_db
      POSTGRES_USER: dashboard_user
      POSTGRES_PASSWORD: dashboard_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dashboard_user -d dashboard_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and task queue
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Backend
  backend:
    build:
      context: .
      dockerfile: docker/Dockerfile.backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://dashboard_user:dashboard_password@postgres:5432/dashboard_db
      - REDIS_URL=redis://redis:6379/0
      - REDIS_CACHE_URL=redis://redis:6379/1
      - ENVIRONMENT=development
    volumes:
      - .:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Celery Worker
  celery-worker:
    build:
      context: .
      dockerfile: docker/Dockerfile.celery
    environment:
      - DATABASE_URL=postgresql+asyncpg://dashboard_user:dashboard_password@postgres:5432/dashboard_db
      - REDIS_URL=redis://redis:6379/0
      - REDIS_CACHE_URL=redis://redis:6379/1
      - ENVIRONMENT=development
    volumes:
      - .:/app
    depends_on:
      - postgres
      - redis
      - backend
    command: celery -A app.tasks.celery_app worker --loglevel=info

  # Celery Beat Scheduler
  celery-beat:
    build:
      context: .
      dockerfile: docker/Dockerfile.celery
    environment:
      - DATABASE_URL=postgresql+asyncpg://dashboard_user:dashboard_password@postgres:5432/dashboard_db
      - REDIS_URL=redis://redis:6379/0
      - REDIS_CACHE_URL=redis://redis:6379/1
      - ENVIRONMENT=development
    volumes:
      - .:/app
    depends_on:
      - postgres
      - redis
      - backend
    command: celery -A app.tasks.celery_app beat --loglevel=info

  # Celery Flower (Task Monitor)
  celery-flower:
    build:
      context: .
      dockerfile: docker/Dockerfile.celery
    ports:
      - "5555:5555"
    environment:
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - .:/app
    depends_on:
      - redis
    command: celery -A app.tasks.celery_app flower --port=5555

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: dashboard_network